%!PS-Adobe-3.0
%%Title: (Shell Script Handout)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (12:38 PM Thursday, October 6, 1994)
%%For: (Tom)
%%Pages: 10
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier
%%DocumentNeededFonts: Times-Roman Times-Bold Times-Italic Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -31 761 581
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 159 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize LetterSmall

    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
%%EndFeature
}featurecleanup
(Tom)setjob
/pT[1 0 0 -1 31 761]def/mT[1 0 0 -1 31 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Courier
/f0_1/Times-Roman :mre
/f0_18 f0_1 18 scf
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f1_1 f0_1 :v def
/f2_1/Times-Bold :mre
/f2_14 f2_1 14 scf
/f2_12 f2_1 12 scf
/f3_1/Times-Italic :mre
/f3_14 f3_1 14 scf
/f4_1/Courier :mre
/f5_1 f4_1 1.2 scf
/f5_12 f5_1 12 scf
/f5_10 f5_1 10 scf
/f5_9 f5_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Tom; page: 1 of 10)setjob
%%EndPageSetup
gS 0 0 552 730 rC
59 19 :M
f0_18 sf
18 f1_1 :p
135 :m
-.026(/bin/csh vs. /bin/sh)A
59 48 :M
f0_14 sf
-.006(The two most commonly used shells are the Bourne shell \()A
f2_14 sf
(/bin/sh)S
429 48 :M
f0_14 sf
-.081(\) and the C)A
59 62 :M
.877 .088(shell \()J
96 62 :M
f2_14 sf
.403(/bin/csh)A
f0_14 sf
1.241 .124(\).  Most Unix users use csh or one of its derivatives \(tcsh,)J
59 76 :M
-.001(doosh\) as their interactive shell.  sh and its derivates \(bash, ksh\), on the other)A
59 90 :M
.699 .07(hand, were designed as programming shells, and are generally more robust)J
59 104 :M
-.002(for shell programming \(although the syntax takes some getting used to\).)A
59 132 :M
1.268 .127(Nevertheless, for this session most examples will be in csh, since am not)J
59 146 :M
-.005(particularly familiar with sh.)A
59 191 :M
f0_18 sf
113.001 :m
-.068(Back Quotes: ``)A
59 220 :M
f0_14 sf
.452 .045(The back quote is one of the most useful shell tools.  It allows you to insert)J
59 234 :M
-.005(the output of one command onto the command line of another.)A
59 263 :M
f5_12 sf
-1.471(kill -STOP `ps aux | grep ^theodore | awk '{ print $2 }'`)A
59 291 :M
f0_14 sf
.387 .039(The ^ is part of a )J
f3_14 sf
1.215 .121(regular expression)J
270 291 :M
f0_14 sf
.361 .036(: it tells )J
f2_14 sf
.221(grep)A
f0_14 sf
.609 .061( to print only lines which)J
59 305 :M
1.004 .1(begin with the word "theodore."  )J
256 305 :M
f2_14 sf
1.288 .129(man ed)J
f0_14 sf
.906 .091( for a full explanation of regular)J
59 319 :M
-.074(expressions.)A
59 347 :M
f2_14 sf
-.445(awk)A
84 347 :M
f0_14 sf
1.924 .192( is good at grabbing one or more specific fields from a text file or)J
59 361 :M
-.002(program output.  In the above example it prints the second field of the output)A
59 375 :M
3 .3(from )J
f2_14 sf
3.527 .353(ps aux)J
f0_14 sf
3.354 .335(--the process number.  awk is actually pretty powerful;)J
59 389 :M
f2_14 sf
.461 .046(man awk)J
f0_14 sf
.266 .027( for a command listing \(to really learn it, a more substantial text is)J
59 403 :M
-.114(needed\).)A
59 456 :M
f0_18 sf
56 :m
-.142(/bin/sed)A
59 485 :M
f2_14 sf
.634(sed)A
f0_14 sf
1.973 .197( is often used to change or remove characters from an input stream)J
59 499 :M
-.007(\(although it, too, can do much more; )A
f2_14 sf
-.009(man sed)A
f0_14 sf
-.006( for details\).)A
59 528 :M
f5_12 sf
-1.471(    set prompt=`hostname | sed 's/\\..*$//'`" [\\!] ")A
59 556 :M
f0_14 sf
1.512 .151(On some systems, hostname returns just the machine name; on others, it)J
59 570 :M
1.236 .124(returns the machine name with the domain \(i.e. lightning.Berkeley.EDU\).)J
59 584 :M
.204 .02(Since I want just the hostname in my prompt, the above sed command looks)J
59 598 :M
-.002(for the first "dot" in the output from "hostname" and discards it, along with)A
59 612 :M
-.006(the rest of the output.  It would be easier, but less portable, to do)A
59 641 :M
f5_12 sf
-1.53(sed 's/.Berkeley.EDU//')A
59 681 :M
f2_12 sf
-.141(See Also)A
102 681 :M
f0_12 sf
-.017( Script 1 lines 7-8)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Tom; page: 2 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 50 :M
f0_18 sf
18 f1_1 :p
123 :m
-.033(Quoting: ' " and \\)A
90 79 :M
f0_14 sf
1.034 .103(Both the C Shell \()J
198 79 :M
f2_14 sf
-.097(/bin/csh)A
245 79 :M
f0_14 sf
.77 .077(\) and the Bourne Shell \()J
f2_14 sf
.286(/bin/sh)A
428 79 :M
f0_14 sf
.81 .081(\) expand certain)J
90 93 :M
.326 .033(characters before they execute a command.  This is called )J
423 93 :M
f3_14 sf
-.111(globbing)A
473 93 :M
f0_14 sf
.065 .006(, and the)J
90 107 :M
2.512 .251(characters are usually called )J
270 107 :M
f3_14 sf
.724(wildcards)A
f0_14 sf
2.195 .219(.  It's frequently used to match)J
90 121 :M
-.022(multiple files with one command \(i.e. )A
304 121 :M
f2_14 sf
-.103(rm *)A
f0_14 sf
-.119(\).)A
90 149 :M
.926 .093(Most characters used for wildcards are also used in regular expressions; if)J
90 163 :M
.831 .083(you want to use such a character in a regular expression, you must tell the)J
90 177 :M
-.042(shell not to expand it.)A
90 205 :M
.448 .045(In the Bourne shell, ' ' \(single quotes\) disable all special characters between)J
90 219 :M
.22 .022(the quotes.  " " \(double quotes\) disable all special characters except $, `, and)J
90 233 :M
-.01(\\.  \\ \(backslash\) disables globbing for one character only.)A
90 261 :M
.425 .043(In the C shell, single quotes disable all special characters except ! \(which is)J
90 275 :M
1.427 .143(used for history substitutions, such as !! to substitute the last command\).)J
90 289 :M
1.118 .112(Double quotes disable all special characters except $, `, and !.  Backslash)J
90 303 :M
-.014(disables globbing for one character only.)A
90 331 :M
f2_14 sf
(Common globbing problems:)S
90 357 :M
f2_12 sf
-.197(WRONG:)A
90 372 :M
f5_12 sf
-1.486(alias tclue echo "get a clue, tawei" | wall)A
90 398 :M
f2_12 sf
(RIGHT:)S
90 413 :M
f5_12 sf
-1.471(alias tclue 'echo "get a clue, tawei" | wall')A
90 453 :M
f2_12 sf
-.197(WRONG:)A
90 468 :M
f5_12 sf
-1.562(grep foo*bar README)A
90 494 :M
f2_12 sf
(RIGHT:)S
90 509 :M
f5_12 sf
-1.514(grep foo\\*bar README)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Tom; page: 3 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 64 :M
f0_18 sf
18 f1_1 :p
53 :m
-.158(foreach)A
90 93 :M
f0_14 sf
.998 .1(The shells expand * and other characters to match multiple filenames, but)J
90 107 :M
2.122 .212(not all programs are capable of dealing with multiple filenames on the)J
90 121 :M
-.019(command line.  The solution to this \(in csh\) is to use )A
f3_14 sf
-.025(foreach)A
430 121 :M
f0_14 sf
-.105(, or )A
f3_14 sf
-.156(for )A
472 121 :M
f0_14 sf
-.093(\(in sh\).)A
90 150 :M
f5_12 sf
-1.553(foreach foo \( * \))A
90 165 :M
-1.608(uudecode $foo)A
90 180 :M
-1.744(rm $foo)A
90 195 :M
-2.457(end)A
90 235 :M
f2_12 sf
-.141(See Also)A
133 235 :M
f0_12 sf
-.082( Script 2)A
90 280 :M
f0_18 sf
133.001 :m
-.047(if..then..else..endif)A
90 309 :M
f0_14 sf
.744 .074(Similar to the C construct, this allows you to build sophisticated scripts by)J
90 323 :M
-.011(testing all sorts of things.  test is a program that performs some sort of check,)A
90 337 :M
1.37 .137(usually on file or directory, and returns 0 \(true\) if the test succeed and 1)J
90 351 :M
-.041(\(fales\) if it fails \()A
185 351 :M
f2_14 sf
-.131(man test)A
236 351 :M
f0_14 sf
-.014( for specifics\).  One common use is in the .cshrc:)A
90 380 :M
f5_12 sf
-1.506(if \( -r ~/.alias \) source ~/.alias)A
90 408 :M
f0_14 sf
.417 .042(This tests for readability of the file .alias in your home directory; if it exists)J
90 422 :M
-.027(and is readable, it is )A
f3_14 sf
-.034(sourced)A
f0_14 sf
(.)S
90 450 :M
-.004(In the Bourne shell, the same thing can be done with:)A
90 479 :M
f5_12 sf
-1.562(if test -r ~/.alias)A
90 494 :M
-2.184(then)A
126 509 :M
-1.541(source ~/.alias)A
90 524 :M
-3.276(fi)A
90 552 :M
f2_14 sf
-.328(OR:)A
90 581 :M
f5_12 sf
-1.558(if [ -r ~/.alias ])A
90 596 :M
-2.184(then)A
126 611 :M
-1.541(source ~/.alias)A
90 626 :M
-3.276(fi)A
90 668 :M
f0_14 sf
-.043(The left bracket )A
f2_14 sf
([)S
187 668 :M
f0_14 sf
-.003( is actually a Unix program, a link to)A
f2_14 sf
( test)S
418 668 :M
f0_14 sf
(.  It is functionally)S
90 682 :M
2.344 .234(equivalent except that it requires a right bracket at the end of the test)J
90 696 :M
-.008(statement.  It can sometimes make code more readable.)A
90 736 :M
f2_12 sf
-.141(See Also)A
133 736 :M
f0_12 sf
-.082( Script 1)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Tom; page: 4 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 50 :M
f0_18 sf
18 f1_1 :p
343.002 :m
-.02(Shell and environment variables: $foo or $FOO)A
90 79 :M
f0_14 sf
.267 .027(Variables in sh and csh work much like variables in a C program; they store)J
90 93 :M
1.979 .198(values \(numeric or text\), and can be used in any expression or printed.)J
90 107 :M
1.084 .108(There are two types; shell variables and environment variables.  The only)J
90 121 :M
1.973 .197(difference is that environment variables are passed to any subshells the)J
90 135 :M
.724 .072(current shell starts up; shell variables are confined to the current shell.  By)J
90 149 :M
.651 .065(convention, shell variables use lowercase letters and environment variables)J
90 163 :M
-.048(use uppercase.)A
90 192 :M
-.25(In csh, shell variables are set with )A
f5_12 sf
-.456(set foo=bar)A
365 192 :M
f0_14 sf
.09 .009(, and environment variables)J
90 207 :M
-.58(are set with )A
f5_12 sf
-1.031(setenv FOO bar)A
259 207 :M
f0_14 sf
-.331(.  In sh, the syntax is)A
f5_12 sf
-.653( FOO=bar)A
432 207 :M
f0_14 sf
(.)S
90 235 :M
.423 .042(Variables are referred to with a $ \(dollar sign\) in front of their names.  This)J
90 249 :M
1.49 .149(can cause problems, because awk also uses dollar signs for its variables.)J
90 263 :M
-.018(The necessary quoting can be difficult.)A
90 291 :M
-.009(There are a number of special variables which can be useful.  They include:)A
90 319 :M
.224 .022($?, $status: The exit status of the last program run.  Usually, but not always,)J
90 333 :M
.486 .049(0 if there were no errors or something else if there were.  See Script 1 for a)J
90 347 :M
-.136(gotcha.)A
90 375 :M
1.087 .109($0-$9: The shells' command line arguments.  $0 refers to the name of the)J
90 389 :M
1.168 .117(shell and is useful \(with )J
237 389 :M
f2_14 sf
.446(basename)A
f0_14 sf
.984 .098(\) in error messages.  See Script 1.  $*)J
90 403 :M
-.008(refers to the whole command line.)A
90 431 :M
-.013($#: The number of command line arguments \(similar to argc\).)A
90 459 :M
($<: Gets a line of user input.  See Script 1.)S
90 487 :M
-.028(There are many more.  )A
221 487 :M
f2_14 sf
-.108(man csh)A
f0_14 sf
-.095( or )A
289 487 :M
f2_14 sf
-.036(man sh)A
f0_14 sf
-.026( for details.)A
90 532 :M
f0_18 sf
163 :m
-.035(Testing Exit Status: {})A
90 561 :M
f0_14 sf
.802 .08(In the C shell, the curly brace is a useful tool.  It executes the command it)J
90 575 :M
2.172 .217(contains, then inserts the return value into the current expression.  For)J
90 589 :M
-.044(example:)A
90 618 :M
f5_12 sf
-1.487(if \( { grep foo .alias} \) then)A
126 633 :M
-2.457(bar)A
90 648 :M
-2.184(else)A
126 663 :M
-2.457(baz)A
90 678 :M
-1.797(endif)A
90 706 :M
f0_14 sf
1.72 .172(will try to grep for "foo" in the file .alias; if the file .alias exists and is)J
90 720 :M
1.491 .149(readable, grep will return 0 and "bar" will be executed.  If the file .alias)J
90 734 :M
.506 .051(doesn't exist or is unreadable, grep will return 1 and "baz" \(usually an error)J
90 748 :M
-.033(message\) will be executed.)A
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Tom; page: 5 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 64 :M
f0_18 sf
18 f1_1 :p
177.001 :m
-.032(The Hereis Operator: <<)A
90 93 :M
f0_14 sf
.466 .047(The << operator \(sometimes referred to as "hereis"\) can be a useful tool.  It)J
90 107 :M
.877 .088(tells the shell to accept lines of text in the script as standard input until an)J
90 121 :M
-.006(endpoint that you define.  For example:)A
90 150 :M
f5_12 sf
-1.525(mail nobody << ENDMAIL)A
90 165 :M
-2.457(foo)A
90 180 :M
-2.457(bar)A
90 195 :M
-2.457(baz)A
90 210 :M
-1.744(ENDMAIL)A
90 238 :M
f0_14 sf
-.002(will mail "nobody" with the text between the two ENDMAILS.)A
90 283 :M
f0_18 sf
169.001 :m
-.051(Command Grouping: \(\))A
90 312 :M
f0_14 sf
.671 .067(Commands can be grouped for output with parantheses.  If you are using a)J
90 326 :M
1.145 .114(number of different commands to write to a file, this can be helpful.  For)J
90 340 :M
-.044(example:)A
90 366 :M
f2_12 sf
-.066(MESSY:)A
90 381 :M
f5_12 sf
-1.474(echo -n "Last-Updated: " >>! Rosters_Fall_1994)A
90 396 :M
-1.487(echo " " >>! Rosters_Fall_1994)A
90 411 :M
-1.468(cat ~tom/netrekstuff/roster_header >>! Rosters_Fall_1994)A
90 437 :M
f2_12 sf
(CLEAN:)S
90 452 :M
f5_12 sf
-1.479(\( echo -n "Last-Updated: " ; date ; cat \\)A
90 467 :M
-1.464(~tom/netrekstuff/roster_header \)  >>! Rosters_Fall_1994)A
90 509 :M
f0_14 sf
2.158 .216(\(now that I look at this, I could clean it up more by replacing the file)J
90 523 :M
-.01(~tom/netrekstuff/roster_header with the << operator\).)A
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Tom; page: 6 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 64 :M
f0_18 sf
18 f1_1 :p
161.001 :m
-.047(Script 1: moveaccount)A
90 93 :M
f0_14 sf
.391 .039(I wrote this script to move accounts from one disk to another on soda.  As I)J
90 107 :M
.424 .042(said earlier, there was a gotcha in using $status to check the return status of)J
90 121 :M
.53 .053(rdist; when /.rhosts didn't exist, the rdist failed but rdist returned 0 anyway.)J
90 135 :M
.393 .039(At the time I didn't have a special test for the existence of /.rhosts, nor did I)J
90 149 :M
.59 .059(have a abort prompt; the upshot is that someone's account got blown away.)J
90 163 :M
-.014(Moral: don't place absolute faith in $status.)A
90 191 :M
-.015(The script is fairly robust now but could certainly be improved.)A
90 217 :M
f5_9 sf
-.498(#!/usr/local/bin/doosh -f)A
90 228 :M
(#)S
90 239 :M
-.485(# moveaccount for soda.  usage: moveaccount [user] [currentdisk] [newdisk])A
90 250 :M
-.492(# accepts either /usrx or x for disk)A
90 272 :M
-.498(# parse /usrx disk entries)A
90 283 :M
-.49(set curdisk = `echo $2 | sed 's/\\/usr//'`)A
90 294 :M
-.49(set newdisk = `echo $3 | sed 's/\\/usr//'`)A
90 316 :M
-.486(# check to see that these are disks which actually have accounts.)A
90 327 :M
-.485(if \( $curdisk > 9 || $curdisk < 2 || $curdisk == 6 || $curdisk == 8 \) then)A
90 349 :M
-.504(echo -n /usr$curdisk)A
90 360 :M
-.492(echo ": invalid partition, aborting.")A
90 371 :M
-.487(echo "usage: `basename $0` [username] [olddisk] [newdisk]")A
90 393 :M
-.485(else if \( $newdisk > 9 || $newdisk < 2 || $curdisk == 6 || $curdisk == 8 \))A
90 404 :M
-.638(then)A
90 426 :M
-.504(echo -n /usr$newdisk)A
90 437 :M
-.492(echo ": invalid partition, aborting.")A
90 448 :M
-.487(echo "usage: `basename $0` [username] [olddisk] [newdisk]")A
90 481 :M
-.485(# check to see if some idiot has removed /.rhosts.  rdist returns 0 if)A
90 492 :M
-.486(# /.rhosts doesn't exist, therefore the check below won't catch it.)A
90 503 :M
-.486(else if \( ! { grep soda.Berkeley.EDU /.rhosts } \) then >& /dev/null)A
90 525 :M
-.486(echo "Can't rdist, soda.Berkeley.EDU not in .rhosts, aborting.")A
90 547 :M
-.638(else)A
90 569 :M
-.491(echo "rdisting /usr$curdisk/accounts/$1")A
90 591 :M
-.485(# do the actual move, and check that the return value is 0 \(not all that)A
90 602 :M
-.501(# helpful, apparently\))A
90 613 :M
-.487(if \( ! { /usr/ucb/rdist -q -c /usr$curdisk/accounts/$1)A
90 624 :M
-.498(soda:/usr$newdisk/account)A
90 635 :M
-.518(s/$1 } \) then)A
90 657 :M
-.494(echo -n "rdist failed, abort? ")A
90 668 :M
-.502(if \( $< == "y" \) then)A
90 679 :M
-.51( echo "aborting")A
90 690 :M
-.598( exit)A
90 701 :M
-.598(endif)A
90 712 :M
-.598(endif)A
90 734 :M
-.498(echo "Relinking /accounts")A
90 745 :M
-.522(cd /accounts)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Tom; page: 7 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 45 :M
f5_9 sf
-.532(/bin/rm $1)A
90 56 :M
-.495(ln -s /usr$newdisk/accounts/$1)A
90 67 :M
-.508(echo "Mailing $1")A
90 78 :M
-.489(mail -s "Your account has been moved" $1 << END)A
90 89 :M
-.485(Your account has been moved to free up some space on the disk your account)A
90 100 :M
-.485(was on.  This shouldn't affect you unless you use absolute pathnames for)A
90 111 :M
-.526(your files.)A
90 122 :M
-.718(END)A
90 133 :M
-.497(echo "Removing old account")A
90 144 :M
-.492(/bin/rm -rf /usr$curdisk/accounts/$1)A
90 155 :M
-.492(/usr/etc/edquota -p proto$newdisk $1)A
90 166 :M
-.493(/usr/etc/quotacheck /usr$newdisk &)A
90 188 :M
-.598(endif)A
90 199 :M
-.598(endif)A
90 247 :M
f0_18 sf
18 f1_1 :p
152 :m
-.047(Script 2: makerosters)A
90 276 :M
f0_14 sf
.13 .013(This is a script I use for updating the list of team rosters for the International)J
90 290 :M
2.004 .2(Netrek League.  The team rosters are kept individually in the directory)J
90 304 :M
.136 .014(/ftp/pub/netrek/INL/rosters; I edit the rosters there, then run this script to put)J
90 318 :M
-.029(them together into a single file.)A
90 343 :M
f5_10 sf
-1.248(#!/usr/local/bin/doosh -f)A
90 367 :M
-1.223(set bigfile=/ftp/pub/netrek/INL/Rosters_Fall_1994)A
90 391 :M
-1.25(# get rid of the old one)A
90 403 :M
-1.226(rm -f ~tom/netrekstuff/Rosters_Fall_1994.old)A
90 415 :M
-1.223(mv $bigfile ~tom/netrekstuff/Rosters_Fall_1994.old)A
90 439 :M
-1.265(# create the header)A
90 463 :M
-1.215(\( echo -n "Last-Updated: " ; date ; cat ~tom/netrekstuff/roster_header \) \\)A
90 475 :M
-1.298( >>! $bigfile)A
90 499 :M
-1.25(# get the teams in there)A
90 523 :M
-1.227(foreach i \( /ftp/pub/netrek/INL/rosters/* \))A
90 535 :M
-1.219(\(  echo " " ; cat $i ; echo " " ; echo "---" \) >>! $bigfile)A
90 547 :M
-1.797(end)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Tom; page: 8 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 64 :M
f0_18 sf
18 f1_1 :p
110.001 :m
-.059(Script 3: /etc/rc)A
90 93 :M
f0_14 sf
.458 .046(This is a sh script thrown in for completeness.  /etc/rc is the script executed)J
90 107 :M
-.004(at boot time; this is /etc/rc from soda.)A
90 133 :M
f5_9 sf
-.558(#echo ")A
90 144 :M
-.49(#*** Not set-up for Multi-User operation ***)A
90 155 :M
(#)S
90 166 :M
-.489(#You first need to check and change these files:)A
90 177 :M
-.513(#       /etc/rc)A
90 188 :M
-.502(#       /etc/rc.local)A
90 199 :M
-.497(#       /etc/rc.dumpstrings)A
90 210 :M
-.508(#       /etc/ttys)A
90 221 :M
-.504(#       /dev/MAKEDEV)A
90 232 :M
-.504(#       /etc/ttytype)A
90 243 :M
(#)S
90 254 :M
-.488(#Then delete the lines through the line \\"exit 1\\")A
90 265 :M
-.493(#from \\"/etc/rc\\". ">/dev/console)A
90 276 :M
-.558(#exit 1)A
90 287 :M
-.505(HOME=/; export HOME)A
90 298 :M
-.507(PATH=/bin:/usr/bin)A
90 309 :M
-.493(/etc/online -a > /dev/console 2>&1)A
90 320 :M
-.502(if [ -f /etc/mirror ])A
90 331 :M
-.49(then    if /etc/mirror -a >/dev/console 2>&1)A
90 342 :M
-.522(        then)A
90 353 :M
-.488(                echo Mirroring started >/dev/console)A
90 364 :M
-.522(        else)A
90 375 :M
-.486(                echo Mirroring failure--get help! >/dev/console)A
90 386 :M
-.501(                exit 1)A
90 397 :M
-.532(        fi)A
90 408 :M
-.957(fi)A
90 419 :M
-.505(if [ -r /fastboot ])A
90 430 :M
-.638(then)A
90 441 :M
-.496(        /bin/rm -f /fastboot)A
90 452 :M
-.486(        echo Fast boot ... skipping disk checks >/dev/console)A
90 463 :M
-.499(elif [ $1x = autobootx ])A
90 474 :M
-.638(then)A
90 485 :M
-.487(        echo Automatic reboot in progress... >/dev/console)A
90 496 :M
-.498(        date >/dev/console)A
90 507 :M
-.492(        /etc/fsck -py >/dev/console)A
90 518 :M
-.507(        case $? in)A
90 529 :M
-.532(        0\))A
90 540 :M
-.493(                date >/dev/console)A
90 551 :M
-.507(                ;;)A
90 562 :M
-.532(        4\))A
90 573 :M
-.487(                echo "Root fixed - rebooting" >/dev/console)A
90 584 :M
-.49(                if [ -f /etc/mirror ]; then)A
90 595 :M
-.487(                        /etc/unmirror -a >/dev/console 2>&1)A
90 606 :M
-.507(                fi)A
90 617 :M
-.493(                /etc/reboot -q -n)A
90 628 :M
-.507(                ;;)A
90 639 :M
-.532(        8\))A
90 650 :M
-.485(                echo "Automatic reboot failed... help!" >/dev/console)A
90 661 :M
-.501(                exit 1)A
90 672 :M
-.507(                ;;)A
90 683 :M
-.526(        12\))A
90 694 :M
-.487(                echo "Reboot interrupted" >/dev/console)A
90 705 :M
-.501(                exit 1)A
90 716 :M
-.507(                ;;)A
90 727 :M
-.532(        *\))A
90 738 :M
-.486(                echo "Unknown error in reboot" > /dev/console)A
90 749 :M
-.501(                exit 1)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Tom; page: 9 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 45 :M
f5_9 sf
-.507(                ;;)A
90 56 :M
-.522(        esac)A
90 67 :M
-.638(else)A
90 78 :M
-.498(        date >/dev/console)A
90 89 :M
-.957(fi)A
90 100 :M
-.5(/bin/rm -f /etc/nologin)A
90 122 :M
-.487(# attempt to rationally recover the passwd file if needed)A
90 133 :M
-.505(if [ -s /etc/ptmp ])A
90 144 :M
-.638(then)A
90 155 :M
-.496(        if [ -s /etc/passwd ])A
90 166 :M
-.522(        then)A
90 177 :M
-.488(            ls -l /etc/passwd /etc/ptmp >/dev/console)A
90 188 :M
-.485(            /bin/rm -f /etc/ptmp            # should really remove the shorter)A
90 199 :M
-.522(        else)A
90 210 :M
-.486(                echo 'passwd file recovered from ptmp' >/dev/console)A
90 221 :M
-.491(                mv /etc/ptmp /etc/passwd)A
90 232 :M
-.532(        fi)A
90 243 :M
-.502(elif [ -r /etc/ptmp ])A
90 254 :M
-.638(then)A
90 265 :M
-.487(        echo 'removing passwd lock file' >/dev/console)A
90 276 :M
-.496(        /bin/rm -f /etc/ptmp)A
90 287 :M
-.957(fi)A
90 309 :M
(#)S
90 320 :M
-.487(# may need to happen after disks mounted in /etc/rc.local)A
90 331 :M
(#)S
90 342 :M
-.485(#/usr/etc/swapon -a                                             >/dev/console)A
90 364 :M
-.487(# syslogd needs to be started before the other deamons.)A
90 375 :M
(#)S
90 386 :M
-.491(# Moved to /etc/rc.local  11/12   -tom)A
90 397 :M
(#)S
90 408 :M
-.496(#if [ -f /etc/syslogd ]; then)A
90 419 :M
-.485(#       /etc/syslogd & echo 'starting system logger.'   >/dev/console)A
90 430 :M
-.718(#fi)A
90 452 :M
-.502(/bin/sh /etc/rc.local)A
90 474 :M
-.507(/usr/etc/swapon -a)A
90 496 :M
-.485(                                echo preserving editor files    >/dev/console)A
90 507 :M
-.492(\(cd /tmp; /usr/lib/ex3.7preserve -a\))A
90 518 :M
-.501(if [ -r /etc/rc.sys5 ])A
90 529 :M
-.638(then)A
90 540 :M
-.494(        att /bin/sh /etc/rc.sys5)A
90 551 :M
-.957(fi)A
90 562 :M
-.485(                                echo clearing /tmp              >/dev/console)A
90 573 :M
-.498(\(cd /tmp; /bin/rm -f - *\))A
90 584 :M
-.485(                                echo -n standard daemons:       >/dev/console)A
90 595 :M
-.485(/etc/update &                   echo -n ' update'               >/dev/console)A
90 606 :M
-.515(# now vix-cron)A
90 617 :M
-.485(#/etc/cron &                    echo -n ' cron'                 >/dev/console)A
90 628 :M
-.485(/usr/local/adm/cron &           echo -n ' cron'                 >/dev/console)A
90 639 :M
-.518(cd /usr/spool)A
90 650 :M
-.494(/bin/rm -f uucp/LCK/LCK.* rwho/*)A
90 661 :M
-.496(if [ -f /usr/lib/lpd ]; then)A
90 672 :M
-.488(        /bin/rm -f /dev/printer /usr/spool/lpd.lock)A
90 683 :M
-.485(        /usr/lib/lpd &          echo -n ' printer'              >/dev/console)A
90 694 :M
-.957(fi)A
90 705 :M
-.496(if [ -f /usr/adm/acct ]; then)A
90 716 :M
-.485(        /usr/etc/accton /usr/adm/acct & echo -n ' accounting'   >/dev/console)A
90 727 :M
-.957(fi)A
90 738 :M
-.485(                                echo '.'                        >/dev/console)A
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Tom; page: 10 of 10)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
90 45 :M
f5_9 sf
-.638(cd /)A
90 56 :M
-.485(echo -n starting network:                                       >/dev/console)A
90 67 :M
-.485(echo -n ' pseudos'                                              >/dev/console)A
90 78 :M
(\()S
90 89 :M
-.538(  cd /dev)A
90 100 :M
-.497(  files="`/bin/echo pty??`")A
90 111 :M
-.499(  /etc/chown root $files)A
90 122 :M
-.5(  /bin/chmod 666 $files)A
90 133 :M
-.493(  files="`/bin/echo tty[p-wP-W]?`")A
90 144 :M
-.499(  /etc/chown root $files)A
90 155 :M
-.5(  /bin/chmod 666 $files)A
90 166 :M
(\))S
90 177 :M
-.498(if [ -f /etc/inetd ]; then)A
90 188 :M
-.485(        /etc/inetd & echo -n ' inet'                            >/dev/console)A
90 199 :M
-.957(fi)A
90 210 :M
-.495(if [ -f /usr/etc/rwhod ]; then)A
90 221 :M
-.485(        /usr/etc/rwhod & echo -n ' rwhod'                       >/dev/console)A
90 232 :M
-.957(fi)A
90 243 :M
-.485(                                echo '.'                        >/dev/console)A
90 265 :M
-.499(if [ -d /usr/pci ]; then)A
90 276 :M
-.494(        \(TERM=ansi export TERM;)A
90 287 :M
-.485(         echo -n starting PCI:                                  >/dev/console)A
90 298 :M
-.504(         cd /usr/pci)A
90 309 :M
-.485(         rm -f .m .mlock; echo -n ' locks'                      >/dev/console)A
90 320 :M
-.485(         /usr/pci/eshare & echo -n ' disk'                      >/dev/console)A
90 331 :M
-.51(         sleep 5)A
90 342 :M
-.485(         /usr/pci/email & echo -n ' mail'                       >/dev/console)A
90 353 :M
-.485(         /usr/pci/eprint & echo -n ' printer'                   >/dev/console)A
90 364 :M
-.485(         echo '.'                                               >/dev/console)A
90 375 :M
-.538(        \))A
90 386 :M
-.957(fi)A
90 408 :M
-.485(/usr/etc/savecore -C /usr/crash                            >/dev/console 2>&1)A
90 419 :M
-.485(/bin/sh /etc/rc.dumpstrings                                     >/dev/console)A
90 441 :M
-.489(#if [ -f /usr/local/lib/nn/scripts/boot]; then)A
90 452 :M
-.485(#    /usr/local/lib/nn/scripts/boot & echo "starting nn daemon" > /dev/console)A
90 463 :M
-.718(#fi)A
90 496 :M
-.485(                                date                            >/dev/console)A
90 507 :M
-.574(exit 0)A
endp
%%Trailer
end		% md
%%EOF

